<template>
  <div class="container">
    <div class="main" v-if="isLogin">
      <div class="item part1" :class="{'show': statusList['list1'][0]}">Hello!</div>
      <div class="item part1" :class="{'show': statusList['list1'][1]}">
        <img class="img" :src="userInfo.avatarUrl"/>
        <div>可爱的 {{userInfo.nickName}}</div>
      </div>
      <div class="item part1" :class="{'show': statusList['list1'][2]}">
        欢迎来到 <span class="text-olive">烟雨之谜</span>
      </div>
      <div class="item part1" v-if="!hasLocationAuth" :class="{'show': statusList['list1'][3]}">
        请先给我一个授权
      </div>
      <div class="item part1" v-if="!hasLocationAuth" :class="{'show': statusList['list1'][4]}">
        <button class="cu-btn bg-olive" @tap="getLocationAuth">授权</button>
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][0]}">
        OK 下面来说明使用方法
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][1]}">
        我会先给你一个谜题 答案是一个地方
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][2]}">
        聪明的你想到答案后 就去那个地方 点击 <span class="text-olive">我到了</span>
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][3]}">
        我就会带你到下一个地方
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][4]}">
        由于定位精度 可能会不太准确
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][5]}">
        坚定你的想法 多点几次 <span class="text-olive">我到了</span>
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][6]}">
        当你答出最后一个谜题 本次游览也到此结束
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][7]}">别急</div>
      <div class="item part2" :class="{'show': statusList['list2'][8]}">
        你还会得到一份<span class="text-olive">精美大奖</span>🎁
      </div>
      <div class="item part2" :class="{'show': statusList['list2'][9]}">
        <button class="cu-btn bg-olive" @tap="goPuzzle(1)">准备好了 就点这里</button>
      </div>
<!--       <button class="cu-btn bg-red margin-tb-sm lg" @tap="getLocation">获取地理位置</button>
      latitude: {{location.latitude}} <br>
      longitude: {{location.longitude}} <br>
      accuracy: {{location.accuracy}} <br>
      work latitude: {{workLocation.latitude}} <br>
      work longitude: {{workLocation.longitude}} <br>
      distance: {{distance}} -->
    </div>
    <div class="nologin" v-else>
      <div class="word">
        请先登录
      </div>
      <button class="cu-btn bg-olive margin-tb-sm lg" open-type="getUserInfo" bindgetuserinfo="onGotUserInfo">登录</button>
    </div>
  </div>
</template>
<script>
  import wepy from '@wepy/core'
  wepy.page({
    data: {
      userInfo: {
        nickName: '用户'
      },
      isLogin: false,
      hasLocationAuth: false,
      location: {},
      workLocation: {
        latitude: 39.9859412184,
        longitude: 116.4786708355
      },
      PI: 3.1415926,
      EARTH_RADIUS: 6378137.0,
      distance: 99999,
      maxDiff: 200,
      statusList: {
        list1: {
          0: false,
          1: false,
          2: false,
          3: false,
          4: false
        },
        list2: {
          0: false,
          1: false,
          2: false,
          3: false,
          4: false,
          5: false,
          6: false,
          7: false,
          8: false,
          9: false
        }
      }
    },
    methods: {
      loginFadeIn(index) {
        for (let i in this.statusList[index]) {
          setTimeout(() => {
            this.statusList[index][i] = true
          }, (i + 1) * 160)
        }
      },
      onGotUserInfo(e) {
        if (e.$wx.detail.userInfo) {
          this.userInfo = e.$wx.detail.userInfo
          this.isLogin = true
          this.loginFadeIn('list1')
        } else {
          wx.showModal({
            title: '提示',
            content: '需要授权才可以使用，请重新授权',
            showCancel: false,
            success: res => {
              if (res.confirm) {
                this.isLogin = false
              }
            }
          })
        }
      },
      getLocationAuth() {
        wx.authorize({
          scope: 'scope.userLocation',
          success: res => {
            this.hasLocationAuth = true
            this.loginFadeIn('list2')
          }
        })
      },
      getLocation() {
        if (!this.hasLocationAuth) return
        wx.getLocation({
          type: 'gcj02',
          success: res => {
            console.log(res)
            this.location = res
            this.distance = this.getGreatCircleDistance(res.latitude, res.longitude, this.workLocation.latitude, this.workLocation.longitude)
            wx.openLocation({
              latitude: 39.9859412184,
              longitude: 116.4786708355,
              scale: 18
            })
          }
        })
      },
      chooseLocation() {
        if (!this.hasLocationAuth) return
        wx.chooseLocation({
          success: res => {
            console.log(res)
          }
        })
      },
      getRad(d) {
        return d * this.PI / 180.0
      },
      getGreatCircleDistance(lat1, lng1, lat2, lng2) {
        let radLat1 = this.getRad(lat1)
        let radLat2 = this.getRad(lat2)
        let a = radLat1 - radLat2
        let b = this.getRad(lng1) - this.getRad(lng2)
        let s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)))
        s = s * this.EARTH_RADIUS
        s = Math.round(s * 10000) / 10000.0
        return s
      },
      goPuzzle(status) {
        wx.redirectTo({
          url: `puzzle?status=${status}`
        })
      }
    },
    created() {
      wx.getSetting({
        success: res => {
          if (res.authSetting['scope.userInfo']) {
            wx.getUserInfo({
              success: res => {
                this.userInfo = res.userInfo
                this.isLogin = true
                this.loginFadeIn('list1')
              }
            })
          }
          if (res.authSetting['scope.userLocation']) {
            this.hasLocationAuth = true
          }
        }
      })
      let status = wx.getStorageSync('status')
      if (status) {
        this.goPuzzle(status)
      }
    }
  })
</script>
<config>
  {
    navigationBarTitleText: '烟雨之谜'
  }
</config>
<style lang="less">
  page{
    background-color: #FFFAFA;
  }
  .container{
    .nologin{
      text-align: center;
      padding-top: 200rpx;
      .word{
        font-size: 36rpx;
        margin-bottom: 30rpx;
      }
    }
    .main{
      text-align: center;
      padding-top: 20rpx;
      .item{
        font-size: 32rpx;
        margin-bottom: 30rpx;
        opacity: 0;
        transition: opacity .4s linear;
        .img{
          width: 100rpx;
          height: 100rpx;
          border-radius: 50%;
        }
      }
      .show{
        opacity: 1;
      }
    }
  }
</style>
